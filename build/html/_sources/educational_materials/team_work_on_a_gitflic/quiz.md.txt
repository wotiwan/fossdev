# Вопросы

1. Какая практика разработки с использованием Git помогает изолировать изменения и упрощает слияние кода?
   а) Регулярное обновление основной ветки.
   б) Использование .gitignore для игнорирования файлов.
   в) Ветвление по функциональности.
   г) Автоматизация сборки и тестирования.

2. Какой инструмент помогает обнаруживать и устранять ошибки в коде до его вливания в основную ветку?
   a) Взаимодействие и ревью кода.
   b) Использование тегов для релизов.
   c) Разработка с помощью комментариев.
   d) Поддержание резервных копий кода.

3. Какой файл используется для игнорирования временных файлов, зависимостей и других ненужных элементов в системе контроля версий?
   а) .gitconfig
   б) .gitignore
   в) .gitcommit
   г) .gitbranch

4. Для чего используются теги в системе контроля версий Git?
   а) Для создания резервных копий кода.
   б) Для автоматической сборки и тестирования.
   в) Для обозначения версий релизов.
   г) Для отправки кода на удаленный сервер.

5. Какой принцип работы с Git помогает понимать историю изменений и восстанавливать контекст?
   а) Ветвление по функциональности.
   б) Взаимодействие и ревью кода.
   в) Регулярное обновление основной ветки.
   г) Использование коммитов и их комментариев.

**Ответы:**

1. в)
2. а)
3. б)
4. в)
5. г)