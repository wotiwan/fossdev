## Вопросы 

1. Мы именуем переменные и функции как snake_case или CamelCase?
2. Мы именуем классы как snake_case или CamelCase?
3. Используются ли комментарии для комментирования каждой строки кода?
4. Является ли написание docstring для функций и классов, объясняющие их назначение, хорошей практикой?
5. Считается ли одинаковый отступ (например, использование четырех пробелов для каждого уровня) хорошим стилем даже для языков, которые используют другой способ для разделения вложенных блоков кода?
6. Какая рекомендованная длина строки в Python, если в команде не принято другое? **Ответ**: 79 или 88 символов.
7. Считается ли использование импортов в любом месте кода хорошей практикой? 
8. Является ли `from module import *` хорошей практикой?
9. В Python строковую переменную можно создать, используя одинарные (' ') или двойные кавычки (" "). Как регламентировано их использование? **Ответ**: Выбираются одинарные (' ') или двойные кавычки (" "), и выбранный вид используется для строковых литералов во всех модулях проекта.
10. Правильно ли с точки зрения стиля использовать тернарные операторы для упрощения кода?
11. Верно ли утверждение, что код должен включать как можно больше комментариев, даже если они избыточны (например, констатация очевидного), так как из всех комментариев собирается документация?
12. Верно ли утверждение, что константы, которые встречаются в коде всего раз, должны быть использованы прямо в выражении без объявление дополнительного имени? **Ответ**: Нет, магические числа должны быть именованными переменными или константами с описательными именами.
13. Верно ли утверждение, что необходимо добавить пробелы в конце строки, чтобы длина строки совпадала с регламентированной, например, 79 символов?
14. Должна ли функция быть краткой, насколько это возможно, и сосредоточенной на решении одной задачи?
15. Верно ли утверждение, что аргументы функций и методов должны быть краткими, желательно однобуквенными или аббревиатурой из слов, определяющих их назначение, для экономии места?
16. Чем больше вложенность кода, тем легче его понимать, так как сразу понятен переход на уровень ниже?
