## Вопросы:

1. Что такое виртуальное окружение (virtual environment) для Python?
2. Какова цель использования виртуальных окружений?
3. Как создать новое виртуальное окружение с помощью venv?
4. Как активировать виртуальное окружение на различных операционных системах?
5. Как деактивировать виртуальное окружение?
6. Как проверить, что виртуальное окружение активировано?
7. Какой файл используется для хранения списка зависимостей проекта?
8. Как создать файл зависимостей (например, requirements.txt) для Python-проекта?
9. Как установить зависимости проекта из файла requirements.txt?
10. Как добавить новую зависимость в виртуальное окружение?
11. Как удалить зависимость из виртуального окружения?
12. Какие другие способы можно использовать для управления зависимостями в Python-проекте?
13. Что такое глобальные и локальные зависимости?
14. Какие файлы и директории следует исключить из системы контроля версий (например, Git) при работе с виртуальными окружениями?
15. Каковы основные преимущества использования виртуальных окружений в сравнении с установкой зависимостей глобально?
16. Что произойдет, если в разных проектах используются разные версии одной и той же библиотеки?
17. Как перенести виртуальное окружение на другую систему?
18. Как удалить виртуальное окружение?
19. Как использовать виртуальное окружение в IDE (например, Visual Studio Code)?
20. Какие еще инструменты или методы вы используете для управления рабочим окружением в Python-проектах?

Эти вопросы помогут оценить знания основ настройки и работы с виртуальными окружениями (venv) в Python, что является важным навыком для эффективной разработки проектов.